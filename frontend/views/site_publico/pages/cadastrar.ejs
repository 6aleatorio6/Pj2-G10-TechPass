<section class="container col-11  border border-light col-md-9 col-lg-7 col-xl-5 m-auto align-content-center py-4 px-2 rounded bg-light shadow">
  <img src="images/logo.png" alt="" class="pb-3" style="width: 110px" />
  <!-- <div class="d-flex align-items-center pb-3 justify-content-around">
</div> -->



  <form class="container-fluid m-auto row g-3 " novalidate id="formscadastro">
    <!-- nome real -->
    <div class="  col-12">
      <label for="nome" class="form-label mb-1 ps-2">Nome Completo</label>
      <input class="form-control" id="nome" name="nome" type="text" required />
    </div>

    <!-- username -->
    <div class="col-12 col-sm-8">
      <label for="username" class="form-label mb-1 ps-2">Apelido (username)</label>
      <input name="username" id="username" class="form-control" type="text" required />
    </div>
    <!-- nasc -->
    <div class="  col-sm-4 col-12">
      <label for="nascimento" class="form-label mb-1 ps-2">Data de Nascimento</label>
      <input name="nascimento" id="nascimento" class="form-control" type="date" required />
    </div>

    <!-- email -->
    <div class=" col-12">
      <label for="email" class="form-label mb-1 ps-2">Email</label>
      <input name="email" id="email" class="form-control" type="email" placeholder="digite seu email" required />
    </div>




    <!-- senha -->
    <div class="d-flex flex-column col-sm-5 col-12">
      <label for="senha" class="form-label mb-1 ps-2">Insira sua senha</label>
      <div class="d-flex senhapaia flex-wrap">
        <input name="senha" id="senha" class="form-control rounded-end-0 inputsenha " style="width: 80%;" type="password" placeholder="&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;" />
        <button type="button" class="btn btn-outline-primary rounded-start-0 btnsenha " style="width: 20%;">
          <span class="m-auto"><i class="bi bi-eye-fill"></i></span>
        </button>
      </div>
    </div>

    <!-- cpf -->
    <div class="col-sm-7 col-12">
      <label for="cpf" class="form-label mb-1 ps-2">CPF</label>
      <input class="form-control" id="cpf" name="cpf" type="text" required />
    </div>





    <div class="col-12 mt-5">
      <button class="btn btn-primary w-100 py-2 submit" type="submit">
        <h5 class="m-0">Cadastrar</h5>
      </button>
    </div>

    <p class="mt-3 text-center">
      já tem uma conta? <a href="/login">entre aqui</a>
    </p>
  </form>
</section>

<script>
  document.addEventListener("DOMContentLoaded", async () => {


    const cadastrar = new Inputs("#formscadastro");

    cadastrar.allvalidacao({
      cpf: {
        max: 14,
        min: 14,
        caractereNpermitido: /[^\d\.\-]|[\.\-][\.\-]/g,
        pattern: [
          "(\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2})|\\d{11,14}",
          // "\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}",
          "cpf valido",
          "cpf invalido",
        ],
        autopontuar: [/(\d{3})(\d{3})(\d{3})(\d{2})/, "$1.$2.$3-$4", /[.-]/g, ""],
        customerro: [
          (l) => {
            if (l.match(/\d{11,14}/)) {
              return "cpf com tantos numeros?"
            }
          },
          (async (value) => {
            if (((await axios.get("http://localhost:9000/api/user/cadastrar/?cpf=" + value)).data.resultado.cpf)) {
              return "Esse CPF já está cadastrado"
            }
          })
        ],
        btnoff: "required"
      },
      nome: {
        max: 120,
        min: 3,
        caractereNpermitido: /[^a-zA-Z\s]/g,
        pattern: ["[a-zA-Z\\s]{3,120}", "nome valido", "nome invalido"],
        btnoff: "required"
      },
      username: {
        max: 90,
        min: 3,
        caractereNpermitido: /[^a-zA-Z\s_\-\d]/g,
        pattern: [
          "[a-zA-Z\\s_\\-\\d]{2,90}",
          "apelido valido",
          "apelido invalido",
        ],
        btnoff: "required"
      },
      email: {
        max: 64,
        caractereNpermitido: /[^a-zA-Z0-9.@_-]/g,
        pattern: [
          "^[a-zA-Z0-9\\._+\\-]+@[a-zA-Z0-9\\.\\-]+\\.[a-zA-Z]{2,6}$",
          "email valido",
          "email invalido",
        ],
        customerro: [(async (value) => {
          if (((await axios.get("http://localhost:9000/api/user/cadastrar/?email=" + value)).data.resultado.email)) {
            return "Esse email já está em uso"
          }
        })],
        btnoff: "required"
      },
      nascimento: {
        max: "2099-12-31",
        min: "1900-01-01",
        pattern: ["", "nascimento valido", "nascimento invalido"],
        btnoff: "required"
      },

      senha: {
        max: 50,
        min: 8,
        caractereNpermitido: /[^a-zA-Z0-9\s]/g,
        pattern: ["^[a-zA-Z0-9\\s]{8,50}$", "senha valida", "senha invalido"],
        btnoff: "required"
      },
    });



    const cadastro = cadastrar.cadastrar("http://localhost:9000/api/user/cadastrar", null,
      erro = () => {},
      success = ({
        data
      }) => {
        localStorage.setItem("email", data)

        location.href = "/login"
      })



  })
</script>