<section class="text-white text-center">
  <h1 class="mb-0 ">aproxime o cart찾o</h1>
  <div id="relogio" class=""></div>
  <% if (tarifa) { %>
  <h2 class="mt-5">TARIFA: R$<%= tarifa.toLocaleString()  %> </h2>
  <% } %>
</section>

<form id="formpaia">
  <input style="margin-top: -2000px;" class=" w-25 position-absolute top-0" type="text" name="idCard" id="idCard">
</form>




<script>
  const relogio = () => {
    document.getElementById('relogio').textContent = `Data: ${new Date().toLocaleDateString() } | Hora: ${ new Date().toLocaleTimeString()}`;
  }
  // Atualizar o rel처gio a cada segundo
  setInterval(relogio, 500);
  relogio();

  const aviso = document.createElement("div")
  aviso.classList.add("position-absolute", "text-center")
  aviso.style.left = "130px"
  aviso.style.top = "130px"
  aviso.style.width = "160px"
  aviso.innerHTML = `
      <i class="bi bi-exclamation-circle fs-1 text-danger"></i>
      <p class="text-white text-break">N찾o tem uma viagem iniciada neste onibus</p>
      `

  async function verificarViagem() {
    try {


      const {
        data
      } = await axios.get(`http://localhost:9000/api/catraca/inicio/<%=onibus%>`);

      if (!data) {
        document.body.appendChild(aviso)
      } else {
        if (document.body.contains(aviso)) {
          document.body.removeChild(aviso)

        }

      }

      console.log(data, status);
    } catch (error) {
      console.error(error);

    }
  }


  document.addEventListener("DOMContentLoaded", verificarViagem)
  setInterval(verificarViagem, 4000);

  const input = document.querySelector("input")

  input.focus()
  document.addEventListener("click", () => {
    input.focus()
  })

  document.querySelector("form").addEventListener("submit", async (evt) => {
    evt.preventDefault()

    try {
      const {
        data,
        status
      } = await axios.get(`http://localhost:9000/api/catraca/inicio/${<%=onibus%>}/${input.value}`)

      if (data.code === "P2025") throw "cliente n찾o encontrado"




      const {
        clientes: {
          nome,
          saldo
        },
        tipos_de_cartao: {
          tarifa,
          modalidade
        }
      } = data
      location.href = `/catraca/success/?nome=${nome}&tarifa=${tarifa}&modalidade=${modalidade}&saldo=${saldo}`


    } catch ({
      response
    }) {


      // saldo insuficiente
      if (response && response.status === 402) {
        const {
          saldo,
          tarifa,
          modalidade
        } = response.data
        return location.href = `/catraca/saldoOff/?tarifa=${tarifa}&saldo=${encodeURIComponent(saldo)}&modalidade=${modalidade}`
      }


      // erro de leitura
      location.href = "/catraca/erro"


    }


  })
</script>