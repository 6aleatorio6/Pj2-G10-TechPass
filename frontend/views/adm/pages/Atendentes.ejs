<h4 class="fw-bold py-3 mb-2">
  <span class="text-muted fw-light">Linhas/</span> Atendentes
</h4>

<div id="alert"></div>
<script>
  alert("atendenteFlash");
</script>

<%- include('../partials/modals/create/_formsCriarAtendente.ejs') %>



<section class="mt-5">
  <h4 class="">Todos os pontos de onibus</h4>

  <div class="card">
    <div class="table-responsive text-nowrap">
      <table id="PontosDeOnibus" class="table table-striped" style="width: 100%">
        <thead>
          <tr>
            <th>foto</th>
            <th>nome</th>
            <th>local de trabalho</th>
            <th>turno</th>
            <th>Opções</th>
          </tr>
        </thead>
        <tbody>
          <% allAtendentes.forEach((elem)=> { %>

          <tr>
            <td>
              <div class="ratio ratio-1x1" style="width: 80px">
                <img class="w-100 rounded-1 img-fluid" src="http://localhost:9000/<%= elem.superuser.foto %>" />
              </div>
            </td>
            <td><%= elem.superuser.nome %></td>
            <td>
              <%= elem.loja_recarga  ? elem.loja_recarga.nome : `Não Existe Mais :(` %>
            </td>
            <td><%= elem.turno %></td>
            <td>

              <button type="button" class="btn btn-info py-1 px-2" onclick='modalInfo(<%-JSON.stringify(elem)%>)'>
                <i class="bi bi-info-lg"></i>
              </button>

              <button class="btn btn-warning py-1 px-2" onclick='modalEdit(<%-JSON.stringify(elem)%>)'>
                <i class="bi bi-pencil-square"></i>
              </button>

              <button class="btn btn-danger py-1 px-2" onclick='modalDelet(<%-JSON.stringify(elem)%>)'>
                <i class="bi bi-trash-fill"></i>
              </button>
            </td>
          </tr>
          <% }) %>
        </tbody>
      </table>
    </div>
  </div>
</section>

<!-- chamando o js do boostrap antes de criar a instancia -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
<script>
  const modalDelet = criarFuncaoModal((objEjs) => {
    return ` 
       <div class="modal fade" aria-labelledby="modalToggleLabel2" tabindex="-1" _mstvisible="0" style="display: none" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" _mstvisible="1">
          <div class="modal-content" _mstvisible="2">
            <div class="modal-header" _mstvisible="3">
              <h5 class="modal-title text-warning" id="modalToggleLabel2" _msttexthash="66105" _msthash="311" _mstvisible="4">
                Alerta!!!
              </h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar" _mstaria-label="59709" _msthash="312" _mstvisible="4"></button>
            </div>
            <div class="modal-body" _msttexthash="1998048" _msthash="313" _mstvisible="3">
              <span>
                Tem certeza que desja excluir a Atendente do CPF ${objEjs.superuser.cpf}?</span>
            </div>
            <div class="modal-footer" _mstvisible="3">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" _msttexthash="324714" _msthash="314" _mstvisible="4">
                Cancelar
              </button>
              <button type="buttom" class="btn btn-danger" id="deletePontoId">
                Sim, Deletar
              </button>
            </div>
          </div>
        </div>
      </div>
     `;
  }, (modal, objEjs) => {
    modal.querySelector("#deletePontoId").addEventListener("click", async (evt) => {
      // evt.preventDefault();
      try {
        const deletado = await axios.delete(
          `http://localhost:9000/api/userADM/atendente/${objEjs.superuser.id}`, getCookie()
        );

        localStorage.setItem(
          "atendenteFlash",
          JSON.stringify({
            cor: "danger",
            texto: `a atendente do CPF ${objEjs.superuser.cpf} foi apagada`,
            div: "#alert",
          })
        );

        location.reload();
      } catch (error) {
        console.error(error);
      }
    });
  });



  const modalEdit = criarFuncaoModal((objEjs) => {
    return `
      <div class="modal fade"  tabindex="-1" aria-labelledby="formCreateMotoristaLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <h1 class="modal-title fs-5" id="formCreateMotoristaLabel">
                Editando o cadastro da atendente ${objEjs.superuser.nome}
              </h1>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <form novalidate enctype="multipart/form-data">
              <div class="modal-body">
                <div class="row gx-2 gy-3 ">
                  <!-- nome real -->
                  <div class="col-12">
                    <label for="nome" class="form-label">Nome Completo</label>
                    <input class="form-control" id="nome" name="nome" type="text" required  value="${objEjs.superuser.nome}" />
                  </div>

                  <!-- cpf -->
                  <div class="col-sm-7 col-12">
                    <label for="cpf" class="form-label">CPF</label>
                    <input class="form-control" id="cpf" name="cpf" type="text" required  value="${objEjs.superuser.cpf}"/>
                  </div>

                  <!-- nasc -->
                  <div class="col-sm-5 col-12">
                    <label for="nascimento" class="form-label">Data de Nascimento</label>
                    <input name="nascimento" id="nascimento" class="form-control" type="date" required  value="${objEjs.superuser.nascimento.split("T")[0]}"/>
                  </div>

                  <!-- email -->
                  <div class="col-sm-7 col-12">
                    <label for="email" class="form-label">Email</label>
                    <input name="email" id="email" class="form-control" type="email" placeholder="digite seu email" required  value="${objEjs.superuser.email}"/>
                  </div>

                  <!-- senha -->
                  <div class="col-sm-5 col-12">
                    <label for="senha" class="form-label">Insira uma senha</label>
                    <input name="senha" id="senha" class="form-control" type="text" placeholder="&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;" />
                  </div>


                  <!-- nome real -->
                  <div class="col-12">
                    <label for="endereco" class="form-label">Endereço </label>
                    <input class="form-control" id="endereco" name="endereco" type="text" required value="${objEjs.endereco}" />
                  </div>


                  <div class="col-sm-7 col-12">
                    <label for="foto" class="form-label"> foto</label>
                    <input name="foto" id="foto" class="form-control" type="file" required accept="image/*" />
                  </div>


                  <!-- email -->
                  <div class="col-12 col-sm-5">
                    <label for="telefone" class="form-label">Telefone</label>
                    <input name="telefone" id="telefone" class="form-control" type="text" placeholder="digite seu telefone" required value="${objEjs.telefone}" />
                  </div>



                  <div class="col-sm-7 col-12">
                    <label for="local_de_trabalho_idasd" class="form-label">local de trabalho</label>
                    <select class="form-select" aria-label="Default select example" name="local_de_trabalho_id" id="local_de_trabalho_idasd">
                <option selected>selecione o local de trabalho</option>
                     
                    </select>
                  </div>


                  <div class="col-12 col-sm-5">
                    <label for="turno" class="form-label">turno</label>
                    <select class="form-select" aria-label="Default select example" name="turno" id="turnoEDit">
                <option selected>Selecione um turno</option>
                      
                      <option value="manha">manha</option>
                      <option value="tarde">tarde</option>
                      <option value="noite">noite</option>
                    </select>
                  </div>
                </div>

                <div class="modal-footer pb-1 px-0 pt-5 d-flex justify-content-between">
                  <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    sair
                  </button>

                  <div>
                    <button type="button" class="btn btn-secondary" onclick="this.parentNode.parentNode.parentNode.parentNode.reset()">
                      Resetar
                    </button>

                    <button type="submit" class="btn btn-warning">
                      Salvar alterações
                    </button>
                  </div>

                </div>
            </form>
          </div>
        </div>
      </div>
      `;
  }, async (modal, objEjs) => {

    const lojas = (await axios.get("http://localhost:9000/api/adm/lojas", getCookie()))
      .data;

    const campo = modal.querySelector("#local_de_trabalho_idasd");
    lojas.forEach((loja) => {
      const option = document.createElement("option");
      if (loja.id === objEjs.loja_recarga.id) {
        option.selected = true
        option.value = ""
      }
      option.innerText = loja.nome;
      option.value = loja.id;
      campo.appendChild(option);
    })

    const turnos = [...modal.querySelector("#turnoEDit").options]
    for (const option of turnos) {
      if (option.value === objEjs.turno) {
        option.selected = true
        option.value = ""
        break
      }
    }




    formsValidacaoEdit = new Inputs(modal.querySelector("form")) // pega todos os inputs do form


    formsValidacaoEdit.forms.addEventListener("submit", async (event) => {

      event.preventDefault()

      try {

        const data = formsValidacaoEdit.allValues({
          nascimento: nascimento => new Date(nascimento).toISOString()
        })

        const response = await axios.put(`http://localhost:9000/api/userADM/atendente/${objEjs.superUser_id}`, data, getCookie())

        localStorage.setItem("atendenteFlash", JSON.stringify({
          cor: "warning",
          texto: `O cadastro da atendente do CPF ${objEjs.superuser.cpf} foi alterado`,
          div: "#alert",
        }))

        location.reload()

      } catch (error) {
        console.log(error);
      }


    })



    formsValidacaoEdit.allvalidacao(atendenteEDIT);
    formsValidacaoEdit.neutralidadeON();

  })



  const modalInfo = criarFuncaoModal((objEjs) => {
    return `
    <div class="modal fade" tabindex="-1">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <div class="modal-header border-bottom">
            <h5 class="modal-title">Detalhes da atendente ${objEjs.superuser.nome}</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <div class="row ">
              <div class="col-5 ">
                <div class="ratio ratio-1x1">
                  <img src="http://localhost:9000/${ objEjs.superuser.foto }" class="img-fluid w-100 rounded-1 border" />
                </div>
              </div>
              <div class="col-7 list-group list-group-flush">
                <!-- cnh cpf email nascimento nome senha -->

                <li class="list-group-item pt-0">
                  Nome:
                  <span class="ms-1"> ${ objEjs.superuser.nome }</span>
                </li>
                <li class="list-group-item">
                  Nascimento: <span class="ms-1"> ${ objEjs.superuser.nascimento.split("T")[0] }</span>
                </li>
                <li class="list-group-item">
                  CPF:
                  <span class="ms-1"> ${ objEjs.superuser.cpf }</span>
                </li>
                <li class="list-group-item">
                  Telefone:
                  <span class="ms-1"> ${ objEjs.telefone }</span>
                </li>

              </div>
            </div>
            <div class="row list-group list-group-flush border-top pt-3">

              <li class="list-group-item pt-0">
                Email:
                <span class="ms-1"> ${ objEjs.superuser.email }</span>
              </li>
              <li class="list-group-item">
                Endereço: <span class="ms-1"> ${ objEjs.endereco }</span>
              </li>
              <li class="list-group-item">
                Loja:
                <span class="ms-1"> ${ objEjs.loja_recarga  ? objEjs.loja_recarga.nome : `Não Existe Mais :(`  }</span>
              </li>
              <li class="list-group-item border-bottom">
                Turno:
                <span class="ms-1"> ${ objEjs.turno }</span>
              </li>

            </div>
          </div>
          <div class="modal-footer justify-content-between pt-1 pb-3">

            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
              Fechar
            </button>

            <div>
              <button type="button" class="btn btn-warning" onclick='modalEdit(${JSON.stringify(objEjs)})' data-bs-dismiss="modal">
                Editar
              </button>
              <button type="button" class="btn btn-danger" data-bs-dismiss="modal" onclick='modalDelet(${JSON.stringify(objEjs)})'>
                Deletar
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>`
  }, (modal, objEjs) => {

  })
</script>