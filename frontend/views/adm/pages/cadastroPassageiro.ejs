<div id="alert">
  <script>
    alert("stopBusCreate");
    alert("stopBusDelete");
    alert("stopBusEdit");
  </script>
</div>

<h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light">Cadastro/</span> Passageiro</h4>



<!-- meu  -->





<!-- modal -->
<div class="mt-3">
  <!-- Button trigger modal -->




  <div class="modal fade" id="exLargeModal" tabindex="-1" style="display: none;" aria-hidden="true">
    <div class="modal-dialog modal modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header ">
          <h1 class="modal-title fs-5" id="createlojaLabel">
            Adicionando novo Ônibus
          </h1>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>

        <form id="formPassageiro">
          <div class="modal-body">
            <div class="row g-2">
              <!-- nome real -->
              <div class="col-12">
                <label for="nome" class="form-label">Nome Completo</label>
                <input class="form-control" id="nome" name="nome" type="text" required />
              </div>

              <!-- username -->
              <div class="col-12 col-sm-8">
                <label for="username" class="form-label">Apelido (username)</label>
                <input name="username" id="username" class="form-control" type="text" required />
              </div>
              <!-- nasc -->
              <div class="col-sm-4 col-12">
                <label for="nascimento" class="form-label">Data de Nascimento</label>
                <input name="nascimento" id="nascimento" class="form-control" type="date" required />
              </div>

              <!-- email -->
              <div class="col-6">
                <label for="email" class="form-label">Email</label>
                <input name="email" id="email" class="form-control" type="email" placeholder="digite seu email" required />
              </div>

              <div class=" col-6">
                <label for="cpf" class="form-label">CPF</label>
                <input class="form-control" id="cpf" name="cpf" type="text" required />
              </div>

              <!-- cpf -->

            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary btnvoltar">
              Cancelar
            </button>
            <button type="submit" class="btn btn-primary">Concluir</button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exLargeModal">
    Adicionar Novo Passageiro
  </button>





</div>

<!-- fim meu  -->


<!-- / Content -->

<h4 class="fw-bold py-3 mb-4">
  <span class="text-muted fw-light">Passageiros atuais </span>
</h4>

<div class="card">
  <div class="table-responsive text-nowrap">
    <table id="example" class="table table-striped" style="width: 100%">
      <thead>
        <tr>
          <th>Nome</th>
          <th>CPF</th>
          <th>Email</th>
          <th>Nascimento</th>
          <th>Config</th>
          <th>Recarga</th>
        </tr>
      </thead>
      <tbody>
        <% allPassageiros.forEach((elem)=> { %>

        <tr>
          <td>
            <%= elem.nome %>
          </td>
          <td>
            <%= elem.cpf %>
          </td>
          <td>
            <%= elem.email %>
          </td>
          <td>
            <%= new Date(elem.nascimento).toLocaleDateString()%>
          </td>

          <td>
            <button type="button" class="btn btn-info py-1 px-2" onclick='modalInfo(<%-JSON.stringify(elem)%>)'>
              <i class="bi bi-info-lg"></i>
            </button>

            <button class="btn btn-warning py-1 px-2" onclick='modalEdit(<%-JSON.stringify(elem)%>)'>
              <i class="bi bi-pencil-square"></i>
            </button>

            <button class="btn btn-danger py-1 px-2" data-bs-target="#pontodeonibus<%= elem.id%>" onclick='modalDelet(<%-JSON.stringify(elem)%>)'>
              <i class="bi bi-trash-fill"></i>
            </button>

          </td>
          <td>
               <button class="btn btn-success py-1 px-2" data-bs-target="#pontodeonibus<%= elem.id%>" onclick='modalRecarg(<%-JSON.stringify(elem)%>)'>
                 Recarregar
               </button>
          </td>

       




        </tr>
        <% }) %>
      </tbody>
    </table>
  </div>
</div>


<script>
  document.addEventListener("DOMContentLoaded", () => {


    const formspassageiro = new Inputs("#formPassageiro");



    formspassageiro.allvalidacao({
      nome: {
        min: 3,
        max: 255,
        caractereNpermitido: ["Nnumber", "NcaractereEspecial"],
        pattern: [".+", "nome valido", "nome invalido"],
        btnoff: "naoEobrigatorio",
      },
      username: {
        min: 3,
        max: 45,
        caractereNpermitido: ["Nnumber", "NcaractereEspecial"],
        pattern: ["[a-zA-ZÀ-ú\s]{3,45}", "username valido", "username invalido"],
        btnoff: "naoEobrigatorio",
      },

    });

    formspassageiro.cadastrar(
      "http://localhost:9000/api/adm/passageiros",
      null,
      (erro) => {
        console.log(erro);
      },
      (success = (response) => {
        localStorage.setItem(
          "stopBusCreate",
          JSON.stringify({
            cor: "success",
            texto: response.data.message,
            div: "#alert",
          })
        );

        location.reload();
      }),

    );
  });

 function modalRecarg(objEjs) {

 // transformando o objeto que está transformado em string para objeto dnv

 // criando uma div no js
 const divRecarg = document.createElement("div")

 // adicionando o innerHTML com um template
 // https://www.w3schools.com/js/js_string_templates.asp
 // e
 // adicionando uma div de modal pego do site do boostrap
 divRecarg.innerHTML = `
 <div class="modal fade" tabindex="-1">
   <div class="modal-dialog modal-sm modal-dialog-centered">
     <div class="modal-content">
       <div class="modal-header">
         <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
       </div>
       <div class="modal-body" _msttexthash="1992003" _msthash="309" _mstvisible="3">
         <span class="ms-1 d-flex justify-content-center ">Saldo Atual: R$ ${objEjs.saldo}</span>
         <div class="row" _mstvisible="4">
           <div class="card-body form-group">
             <div class="row mb-2 d-flex justify-content-center">
                <div class=" d-flex justify-content-center
"><span class="mt-5">Valor da recarga R$</span></div>
               
               <div class="col-sm-8 d-flex ">
               
                <input type="number" step="0.01" name="recarga" id="recarga" class="form-control phone-mask" required>
               </div>
             </div>
           </div>
         </div>
       </div>
       <div class="modal-footer justify-content-center">
         <button type="button" class="btn btn-success" data-bs-dismiss="modal">Recarregar</button>
       </div>
     </div>
   </div>
 </div>

 `




 // criando uma variavel que recebe o modal dentro do umadiv
 const modalRecarg = divRecarg.querySelector(".modal")

 // adicionando o modal ao BODY do HTML
 document.body.appendChild(modalRecarg)


 // criando uma instancia seguindo as instruções do boostrap
 // https://getbootstrap.com/docs/5.3/components/modal/#how-it-works
 const InstanciaBoostrapDoModal = new bootstrap.Modal(modalRecarg)

 // abrindo o modal
 InstanciaBoostrapDoModal.toggle()



 // vai para a parte de eventos que encontrara mais informações
 // https://getbootstrap.com/docs/5.3/components/modal/#how-it-works
 modalRecarg.addEventListener("hidden.bs.modal", () => {

 // quando o modal for fechado esse evento acionara e excluira o modal do body
 document.body.removeChild(modalRecarg)
 })
 // fim da função
 }

  
  function modalInfo(objEjs) {

    // transformando o objeto que está transformado em string para objeto dnv

    // criando uma div no js
    const umadiv = document.createElement("div")

    // adicionando o innerHTML com um template
    // https://www.w3schools.com/js/js_string_templates.asp
    // e
    // adicionando uma div de modal pego do site do boostrap
    umadiv.innerHTML = `
  <div class="modal fade" tabindex="-1" >
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Detalhes do Ponto</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body list-group h-100 w-100">
          <li class="list-group-item">Nome:<span class="ms-1"> ${objEjs.nome}</span></li>
          <li class="list-group-item">username:<span class="ms-1"> ${objEjs.username}</span></li>
          <li class="list-group-item">Nascimento:<span class="ms-1"> ${new Date(objEjs.nascimento).toLocaleDateString()}</span></li>
          <li class="list-group-item">Email:<span class="ms-1"> ${objEjs.email}</span></li>
         

        </div >
        <div class="modal-footer justify-content-between">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>

          <div>
          <button type="button" class="btn btn-warning" onclick='modalEdit(${JSON.stringify(objEjs)})' data-bs-dismiss="modal">Editar</button>
          <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Deletar</button>
          </div>
        </div>
      </div >
    </div >
  </div >
  `




    // criando uma variavel que recebe o modal dentro do umadiv
    const modal = umadiv.querySelector(".modal")

    // adicionando o modal ao BODY do HTML
    document.body.appendChild(modal)


    // criando uma instancia seguindo as instruções do boostrap
    // https://getbootstrap.com/docs/5.3/components/modal/#how-it-works
    const InstanciaBoostrapDoModal = new bootstrap.Modal(modal)

    // abrindo o modal
    InstanciaBoostrapDoModal.toggle()



    // vai para a parte de eventos que encontrara mais informações
    // https://getbootstrap.com/docs/5.3/components/modal/#how-it-works
    modal.addEventListener("hidden.bs.modal", () => {

      // quando o modal for fechado esse evento acionara e excluira o modal do body
      document.body.removeChild(modal)
    })
    // fim da função
  }




  function modalDelet(objEjs) {

    const divdelete = document.createElement("div")

    divdelete.innerHTML = `
        
            <div class="modal fade" id="loja${objEjs.id}" aria-labelledby="modalToggleLabel2" tabindex="-1" _mstvisible="0" style="display: none" aria-hidden="true">
              <div class="modal-dialog modal-dialog-centered" _mstvisible="1">
                <div class="modal-content" _mstvisible="2">
                  <div class="modal-header" _mstvisible="3">
                    <h5 class="modal-title text-warning" id="modalToggleLabel2" _msttexthash="66105" _msthash="311" _mstvisible="4">
                      Alerta!!!
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar" _mstaria-label="59709" _msthash="312" _mstvisible="4"></button>
                  </div>
                  <div class="modal-body" _msttexthash="1998048" _msthash="313" _mstvisible="3">
                    <span>
                      Tem certeza que desja a loja ${objEjs.nome} ?</span>
                  </div>
                  <div class="modal-footer" _mstvisible="3">
                    <button class="btn btn-secondary" data-bs-dismiss="modal" _msttexthash="324714" _msthash="314" _mstvisible="4">
                      Cancelar
                    </button>
                    
                    <button type="click" class="btn btn-danger" id="deleteLojaId">Sim, Deletar</button>

          `

    const modalDelete = divdelete.querySelector(".modal")

    document.body.appendChild(modalDelete)
    const InstanciaBoostrapDoModal = new bootstrap.Modal(modalDelete)

    InstanciaBoostrapDoModal.toggle()
    document.body.removeChild(modalDelete)

    const btnDelet = modalDelete.querySelector("#deleteLojaId")

    btnDelet.addEventListener("click", async () => {
      try {

        const deletado = await axios.delete(`http://localhost:9000/api/adm/passageiros/${objEjs.id}`)

        localStorage.setItem("stopBusDelete", JSON.stringify({
          cor: "danger",
          texto: ` A loja ${objEjs.nome} foi deletado com sucesso`,
          div: "#alert",
        }))

        location.reload()
      } catch (error) {
        console.error(error)
      }

    })




  }




  function modalEdit(objEjs) {

    const div = document.createElement("div")


    div.innerHTML = `
      
    <div class="modal fade" id="modalToggle" aria-labelledby="modalToggleLabel" tabindex="-1" style="display: none" _mstvisible="0" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered" _mstvisible="1">
        <div class="modal-content" _mstvisible="2">
          <form id="resetForm">
            <div class="modal-header" _mstvisible="3">
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar" _mstaria-label="59709" _msthash="308" _mstvisible="4"></button>
            </div>
            <div class="modal-body" _msttexthash="1992003" _msthash="309" _mstvisible="3">
              <div class="row" _mstvisible="4">
                <div class="card-body form-group">
                  <div class="row mb-4">
                    <label class="col-sm-2 col-form-label" for="nome">Nome</label>
                    <div class="col-sm-10">
                      <input type="text" class="form-control" name="nome" id="nome" value="${objEjs.nome}" required>

                    </div>
                  </div>

                  <div class="row mb-4">
                    <label class="col-sm-2 col-form-label" for="username">username</label>
                    <div class="col-sm-10">
                      <input type="text" name="username" id="username" class="form-control phone-mask" value="${objEjs.username}" />
                    </div>
                  </div>
                  <div class="row mb-4">
                    <label class="col-sm-2 col-form-label" for="nascimento">Nascimento</label>
                    <div class="col-sm-10">
                      <input name="nascimento" id="nascimento" class="form-control" type="date" value="${new Date(objEjs.nascimento).toISOString().split("T")[0]}" required />
                    </div>
                  </div>

                  <div class="row mb-4">
                    <label class="col-sm-2 col-form-label" for="nascimento">Email</label>
                    <div class="col-sm-10">
                      <input type="text" id="email" name="email" class="form-control phone-mask" value="${objEjs.email}" />
                    </div>
                  </div>
                  <div class="row mb-4">
                    <label class="col-sm-2 col-form-label" for="cpf">CPF</label>
                    <div class="col-sm-10">
                      <input type="text" id="cpf" name="cpf" class="form-control phone-mask" value="${objEjs.cpf}" />
                    </div>
                  </div>

                </div>
              </div>
            </div>
            <div class="modal-footer" _mstvisible="3">
              <button type="button" class="btn btn-warning" id="resetar" onclick="document.getElementById('resetForm').reset()">
                Resetar
              </button>

              <button type="submit" class="btn btn-success">
                Salvar alterações
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>

      `

    const modal = div.querySelector(".modal")

    //selecionando o modoal  e adicionando o modal ao BODY do HTML
    document.body.appendChild(modal)

    const InstanciaBoostrapDoModal = new bootstrap.Modal(modal)

    InstanciaBoostrapDoModal.toggle()

    formsValidacaoEdit = new Inputs("#resetForm") // pega todos os inputs do form 
    const btnSalvarAlteracoes = document.querySelector("#btnSalvarAlteracoes")




    formsValidacaoEdit.allvalidacao({
      nome: {
        min: 3,
        max: 255,
        caractereNpermitido: ["Nnumber", "NcaractereEspecial"],
        pattern: [".+", "nome valido", "nome invalido"],
        btnoff: "naoEobrigatorio",
      },
      username: {
        min: 3,
        max: 45,
        caractereNpermitido: ["Nnumber", "NcaractereEspecial"],
        pattern: ["[a-zA-ZÀ-ú\s]{3,45}", "username valido", "username invalido"],
        btnoff: "naoEobrigatorio",
      },


    });



    formsValidacaoEdit.forms.addEventListener("submit", async (event) => {

      event.preventDefault()


      try {

        const valorEdit = formsValidacaoEdit.allValues()




        valorEdit.nascimento = valorEdit.nascimento
        valorEdit.nascimento = new Date(valorEdit.nascimento);



        valorEdit.id = objEjs.id

        const response = await axios.put(`http://localhost:9000/api/adm/passageiros`, valorEdit)



        localStorage.setItem("stopBusEdit", JSON.stringify({
          cor: "success",
          texto: `O ponto do cep ${objEjs.nome} foi alterado para o cep ${valorEdit.nome} com sucesso`,
          div: "#alert",
        }))

        location.reload();



      } catch (error) {
        console.log(error);
      }


    })




    modal.addEventListener("hidden.bs.modal", () => {

      // quando o modal for fechado esse evento acionara e excluira o modal do body
      document.body.removeChild(modal)
    })



  }
</script>