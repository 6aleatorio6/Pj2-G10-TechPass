<h4 class="fw-bold py-3 mb-2">
  <span class="text-muted fw-light">Linhas/</span> Motorista
</h4>

<div id="alert">
  <script>
    alert("motoristaCreate");
    alert("motoristaDelete");
    alert("motoristaEdit");
  </script>
</div>

<%-include('../partials/modals/create/_formsCriarMotorista.ejs') %>

<section class="mt-5">
  <h4 class="">Todos os pontos de onibus</h4>

  <div class="card">
    <div class="table-responsive text-nowrap">
      <table id="PontosDeOnibus" class="table table-striped" style="width: 100%" data-ColNoOrden="[0,3]">
        <thead>
          <tr>
            <th>foto</th>
            <th>nome</th>
            <th>cnh</th>
            <th>nascimento</th>
            <th>Opções</th>
          </tr>
        </thead>
        <tbody>
          <% allMotorista.forEach((elem)=> { %>

          <tr>
            <td >
              <div class="ratio ratio-1x1 " style="width: 80px;" ><img class=" w-100 rounded-1 img-fluid " src="http://localhost:9000/<%= elem.foto %>"></div>
            </td>
            <td><%= elem.superuser.nome %></td>
            <td><%= elem.cnh %></td>
            <td>
              <%= elem.superuser.nascimento.split("T")[0] %>
            </td>
            <td>

              <button class="btn btn-warning py-1 px-2" onclick='modalEdit(<%-JSON.stringify(elem)%>)'>
                <i class="bi bi-pencil-square"></i>
              </button>

              <button class="btn btn-danger py-1 px-2" onclick='modalDelet(<%-JSON.stringify(elem)%>)'>
                <i class="bi bi-trash-fill"></i>
              </button>
            </td>
          </tr>
          <% }) %>
        </tbody>
      </table>
    </div>
  </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
<script>
  function modalDelet(objEjs) {
    const divdelete = document.createElement("div");

    divdelete.innerHTML = ` <%- include("../partials/modals/delete/_motorista.ejs") %> `

    const modalDelete = divdelete.querySelector(".modal");

    document.body.appendChild(modalDelete);
    const InstanciaBoostrapDoModal = new bootstrap.Modal(modalDelete);

    InstanciaBoostrapDoModal.toggle();
    document.body.removeChild(modalDelete);

    const btnDelet = modalDelete.querySelector("#deletePontoId");

    console.log();
    btnDelet.addEventListener("click", async () => {
      try {
        const deletado = await axios.delete(
          `http://localhost:9000/api/userADM/motorista/${objEjs.superUser_id}`
        );

        localStorage.setItem(
          "motoristaDelete",
          JSON.stringify({
            cor: "danger",
            texto: `o motorista  ${objEjs.superuser.nome} foi apagado`,
            div: "#alert",
          })
        );

        location.reload();
      } catch (error) {
        console.error(error);
      }
    });
  }


  function modalEdit(objEjs) {

    const div = document.createElement("div")


    div.innerHTML = ` <%- include("../partials/modals/edit/_motorista.ejs") %> `

    const modal = div.querySelector(".modal")

    //selecionando o modoal  e adicionando o modal ao BODY do HTML
    document.body.appendChild(modal)

    const InstanciaBoostrapDoModal = new bootstrap.Modal(modal)

    InstanciaBoostrapDoModal.toggle()

    formsValidacaoEdit = new Inputs(modal.querySelector("form")) // pega todos os inputs do form 
    const btnSalvarAlteracoes = document.querySelector("#btnSalvarAlteracoes")




    formsValidacaoEdit.forms.addEventListener("submit", async (event) => {

      event.preventDefault()

      try {

        
        const data = formsValidacaoEdit.allValues({
          nascimento: nascimento => new Date(nascimento).toISOString()
        })

        

        const response = await axios.put(`http://localhost:9000/api/userADM/motorista/${objEjs.id}`, data)

        localStorage.setItem("motoristaEdit", JSON.stringify({
          cor: "warning",
          texto: `O cadastro do motorista do CPF ${objEjs.cpf} foi alterado`,
          div: "#alert",
        }))

        location.reload()

      } catch (error) {
        console.log(error);
      }


    })


    
    formsValidacaoEdit.allvalidacao(motoristasEdit_VALID);
    formsValidacaoEdit.neutralidadeON();
    // formsValidacaoEdit.autovalidar()

    modal.addEventListener("hidden.bs.modal", () => {

      // quando o modal for fechado esse evento acionara e excluira o modal do body
      document.body.removeChild(modal)
    })



  }
  // fim modalEdit
</script>