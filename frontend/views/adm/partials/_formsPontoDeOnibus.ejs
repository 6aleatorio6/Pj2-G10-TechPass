<!-- botao -->
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createponto">
  Adicionar Ponto de Onibus
</button>

<!-- modal para criar um ponto de onibus -->
<div class="modal fade" id="createponto" tabindex="-1" aria-labelledby="createpontoLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="createpontoLabel">
          adicionando ponto de onibus
        </h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>

      <form novalidate id="formspontodeonibus">
        <div class="modal-body">
          <div class="row g-2">
            <div class="col-md-4 col-6">
              <label for="cep" class="form-label">CEP</label>
              <input type="text" class="form-control" id="cep" name="cep" required placeholder="11832556 " />
            </div>

            <div class="col-md-10 col-9">
              <label for="rua" class="form-label">rua</label>
              <input type="text" class="form-control" id="rua" name="rua" required placeholder="Rua das Flores " />
            </div>
            <div class="col-md-2 col-3">
              <label for="numero" class="form-label">numero</label>
              <input type="text" class="form-control" id="numero" name="numero" required placeholder="12" />
            </div>
            <div class="col-md-8 col-12">
              <label for="cidade" class="form-label">cidade</label>
              <input type="text" class="form-control" id="cidade" name="cidade" required placeholder="Caraguatatuba" />
            </div>
            <div class="col-md-4 col-12">
              <label for="bairro" class="form-label">bairro</label>
              <input type="text" class="form-control" id="bairro" name="bairro" required placeholder="Olaria" />
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
            Cancelar
          </button>
          <button type="submit" class="btn btn-primary submit">
            Criar ponto
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const formsponto = new Inputs("#formspontodeonibus");

    formsponto.allvalidacao({
      cep: {
        min: 8,
        max: 8,
        caractereNpermitido: /[^\d]/g,
        pattern: ["(\\d{8})", "cep valido", "cep invalido"],
        //  customerro: [(async (value) => {
        //    if (((await axios.get("http://localhost:9000/api/user/cadastrar/?cpf=" + value)).data.resultado.cpf)) {
        //      return "Esse CPF já está cadastrado"
        //    }
        //  })],
        btnoff: "required",
      },

      rua: {
        max: 64,
        min: 2,
        caractereNpermitido: /[^a-zA-Z0-9\s]/g,
        pattern: ["^([a-zA-Z0-9\\s\\-]{2,50})$", "rua valido", "rua invalida"],
        //  customerro: [(async (value) => {
        //    if (((await axios.get("http://localhost:9000/api/user/cadastrar/?email=" + value)).data.resultado.email)) {
        //      return "Esse email já está em uso"
        //    }
        //  })],
        btnoff: "required",
      },

      numero: {
        max: 4,
        min: 1,
        caractereNpermitido: /[^0-9]/g,
        pattern: ["^([0-9]{1,4})$", "numero valido", "numero invalida"],
        //  customerro: [(async (value) => {
        //    if (((await axios.get("http://localhost:9000/api/user/cadastrar/?email=" + value)).data.resultado.email)) {
        //      return "Esse email já está em uso"
        //    }
        //  })],
        btnoff: "required",
      },

      cidade: {
        max: 15,
        min: 3,
        caractereNpermitido: /[^a-zA-Z]/g,
        pattern: ["^([a-zA-Z]{3,15})$", "cidade valido", "cidade invalida"],
        //  customerro: [(async (value) => {
        //    if (((await axios.get("http://localhost:9000/api/user/cadastrar/?email=" + value)).data.resultado.email)) {
        //      return "Esse email já está em uso"
        //    }
        //  })],
        btnoff: "required",
      },

      bairro: {
        max: 15,
        min: 3,
        caractereNpermitido: /[^a-zA-Z]/g,
        pattern: ["^([a-zA-Z]{3,15})$", "bairro valido", "bairro invalida"],
        //  customerro: [(async (value) => {
        //    if (((await axios.get("http://localhost:9000/api/user/cadastrar/?email=" + value)).data.resultado.email)) {
        //      return "Esse email já está em uso"
        //    }
        //  })],
        btnoff: "required",
      },
    });



    formsponto.cadastrar("http://localhost:9000/api/linhas/bus_stop", null)
  });
</script>