generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model adm {
  id           Int       @id @default(autoincrement())
  superUser_id Int       @db.UnsignedInt
  cpf          String?   @db.VarChar(14)
  nascimento   DateTime? @db.Date
  telefone     String?   @db.VarChar(13)
  superuser    superuser @relation(fields: [superUser_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ADM_superUser1")

  @@index([superUser_id], map: "fk_ADM_superUser1_idx")
}

model atendente {
  id                   Int          @id @default(autoincrement())
  local_de_trabalho_id Int
  superUser_id         Int          @db.UnsignedInt
  cpf                  String       @unique(map: "cpf_UNIQUE") @db.VarChar(14)
  turno                String?      @db.VarChar(45)
  nascimento           DateTime?    @db.Date
  telefone             String?      @db.VarChar(13)
  endereco             String?      @db.VarChar(255)
  loja_recarga         loja_recarga @relation(fields: [local_de_trabalho_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendente_loja_recarga1")
  superuser            superuser    @relation(fields: [superUser_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendente_superUser1")

  @@index([local_de_trabalho_id], map: "fk_atendente_loja_recarga1_idx")
  @@index([superUser_id], map: "fk_atendente_superUser1_idx")
}

model cartao {
  id                 Int                  @id @default(autoincrement())
  modalidade         String               @db.VarChar(45)
  tarifa             Decimal?             @db.Decimal(4, 2)
  cliente_tem_cartao cliente_tem_cartao[]
}

model cliente_tem_cartao {
  id           Int        @id @default(autoincrement())
  clientes_id  Int
  cartao_id    Int
  limiteDiario Int?
  clientes     clientes   @relation(fields: [clientes_id], references: [id], onUpdate: Restrict, map: "fk_clientes_has_cartao_passe_clientes")
  cartao       cartao     @relation(fields: [cartao_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_clliente_tem_cartao_cartao1")
  embarque     embarque[]

  @@index([clientes_id], map: "fk_clientes_has_cartao_passe_clientes")
  @@index([cartao_id], map: "fk_clliente_tem_cartao_cartao1_idx")
}

model clientes {
  id                 Int                  @id @default(autoincrement())
  email              String               @unique(map: "email_UNIQUE") @db.VarChar(64)
  cpf                String               @unique(map: "cpf_UNIQUE") @db.VarChar(14)
  username           String?              @db.VarChar(90)
  senha              String?              @db.VarChar(200)
  nome               String?              @db.VarChar(120)
  nascimento         DateTime?            @db.Date
  saldo              Decimal?             @db.Decimal(5, 3)
  cliente_tem_cartao cliente_tem_cartao[]
}

model embarque {
  id                     Int                @id @default(autoincrement())
  viagem_id              Int
  clliente_tem_cartao_id Int
  tarifa                 Decimal?           @db.Decimal(3, 2)
  data                   DateTime?          @default(now()) @db.DateTime(0)
  cliente_tem_cartao     cliente_tem_cartao @relation(fields: [clliente_tem_cartao_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_embarque_clliente_tem_cartao1")
  viagem                 viagem             @relation(fields: [viagem_id], references: [id], onUpdate: Restrict, map: "fk_viagem_has_cliente_has_cartao_passe_viagem1")

  @@index([clliente_tem_cartao_id], map: "fk_embarque_clliente_tem_cartao1_idx")
  @@index([viagem_id], map: "fk_viagem_has_cliente_has_cartao_passe_viagem1")
}

model horario_diario_saida {
  id        Int       @id @default(autoincrement())
  linhas_id Int       @db.UnsignedInt
  inicio    DateTime? @db.Time(0)
  fim       DateTime? @db.Time(0)
  linhas    linhas    @relation(fields: [linhas_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_horario_diario_saida_linhas1")

  @@index([linhas_id], map: "fk_horario_diario_saida_linhas1_idx")
}

model linhas {
  id                   Int                    @id @default(autoincrement()) @db.UnsignedInt
  numero_linha         Int
  bairroOrigem         String                 @db.VarChar(45)
  bairroDestino        String                 @db.VarChar(45)
  horario_diario_saida horario_diario_saida[]
  rotas                rotas[]
  viagem               viagem[]
}

model loja_recarga {
  id        Int         @id @default(autoincrement())
  nome      String?     @default("Tech Pass") @db.VarChar(45)
  cep       String?     @db.VarChar(9)
  endereco  String?     @db.VarChar(255)
  lat       Decimal?    @db.Decimal(9, 6)
  lng       Decimal?    @db.Decimal(9, 6)
  atendente atendente[]
}

model motorista {
  id         Int       @id @default(autoincrement())
  cpf        String?   @db.VarChar(14)
  foto       String?   @db.VarChar(200)
  nascimento DateTime? @db.Date
  cnh        String?   @db.VarChar(11)
  viagem     viagem[]
}

model onibus {
  id                     Int      @id
  placa                  String   @db.VarChar(15)
  quantidade_passageiros Int?
  estado_atual           String?  @db.VarChar(1)
  possui_acessibilidade  String?  @db.VarChar(1)
  viagem                 viagem[]
}

model ponto_de_onibus {
  id       Int      @id @default(autoincrement())
  endereco String?  @db.VarChar(255)
  cep      String?  @db.VarChar(9)
  lat      Decimal? @db.Decimal(9, 6)
  lng      Decimal? @db.Decimal(9, 6)
  rotas    rotas[]
}

model rotas {
  id              Int             @id @default(autoincrement()) @db.UnsignedInt
  percurso        Int?
  linha_id        Int             @db.UnsignedInt
  pontoOnibus_id  Int
  ponto_de_onibus ponto_de_onibus @relation(fields: [pontoOnibus_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rotas_pontoOnibus1")
  linhas          linhas          @relation(fields: [linha_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_trajeto_paradas_linha1")

  @@index([pontoOnibus_id], map: "fk_rotas_pontoOnibus1_idx")
  @@index([linha_id], map: "fk_trajeto_paradas_linha1_idx")
}

model superuser {
  id        Int         @id @default(autoincrement()) @db.UnsignedInt
  email     String      @unique(map: "email_UNIQUE") @db.VarChar(64)
  senha     String?     @db.VarChar(100)
  username  String?     @db.VarChar(45)
  adm       adm[]
  atendente atendente[]
}

model viagem {
  id           Int        @id @default(autoincrement())
  inicio       DateTime?  @db.DateTime(0)
  duracao      Int?
  linhas_id    Int        @db.UnsignedInt
  onibus_id    Int
  motorista_id Int
  embarque     embarque[]
  linhas       linhas     @relation(fields: [linhas_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_viagem_linhas1")
  motorista    motorista  @relation(fields: [motorista_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_viagem_motorista1")
  onibus       onibus     @relation(fields: [onibus_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_viagem_onibus1")

  @@index([linhas_id], map: "fk_viagem_linhas1_idx")
  @@index([motorista_id], map: "fk_viagem_motorista1_idx")
  @@index([onibus_id], map: "fk_viagem_onibus1_idx")
}
